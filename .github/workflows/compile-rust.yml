name: build and upload binary of custom rust

# possible way -> take argument asking whether you want to compile rust or not 

on: [push]

jobs:
  build_and_save:
    runs-on: [self-hosted, linux]    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: build and install
        run: |  
          cp config.toml.verify config.toml
          python x.py install
          cp -r install ~/local_bin
                  # ln -sf ./install ~/local_bin/install

      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-without-markdown
          path: |
            install          










# # action.yml
# on: [push]
# name: 'Build Rust'
# runs:
#   using: 'docker'
#   image: 'Dockerfile'







      # - name: Archive code coverage results
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: code-coverage-report
      #     path: output/test/code-coverage.html

# name: Compile Rust for Dust
# on: [push]
# jobs:
#   Explore-GitHub-Actions:
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
#       - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
#       - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
#       - name: Check out repository code
#         uses: actions/checkout@v2
#       - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
#       - run: echo "🖥️ The workflow is now ready to test your code on the runner."
#       - name: List files in the repository
#         run: |
#           ls ${{ github.workspace }}
#       - run: echo "🍏 This job's status is ${{ job.status }}."


# jobs:
#   example-job:
#     name: Save output
#     steps:
#       - shell: bash
#         run: |
#           expr 1 + 1 > output.log
#       - name: Upload output file
#         uses: actions/upload-artifact@v2
#         with:
#           name: output-log-file
#           path: output.log




